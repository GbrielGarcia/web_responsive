define(['dart_sdk', 'packages/fluro/src/tree.dart', 'packages/fluro/src/common.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/material/page.dart', 'packages/flutter/src/cupertino/route.dart', 'packages/flutter/src/animation/listener_helpers.dart'], (function load__packages__fluro__src__fluro_router_dart(dart_sdk, packages__fluro__src__tree$46dart, packages__fluro__src__common$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__material__page$46dart, packages__flutter__src__cupertino__route$46dart, packages__flutter__src__animation__listener_helpers$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _js_helper = dart_sdk._js_helper;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const tree = packages__fluro__src__tree$46dart.src__tree;
  const common = packages__fluro__src__common$46dart.src__common;
  const navigator$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__navigator;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const pages = packages__flutter__src__widgets__widget_span$46dart.src__widgets__pages;
  const transitions = packages__flutter__src__widgets__widget_span$46dart.src__widgets__transitions;
  const page = packages__flutter__src__material__page$46dart.src__material__page;
  const route$ = packages__flutter__src__cupertino__route$46dart.src__cupertino__route;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  const tween = packages__flutter__src__animation__listener_helpers$46dart.src__animation__tween;
  var fluro_router = Object.create(dart.library);
  var fluro = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  var T = {
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    RouteTobool: () => (T.RouteTobool = dart.constFn(dart.fnType(core.bool, [navigator$.Route])))(),
    MaterialPageRouteOfNull: () => (T.MaterialPageRouteOfNull = dart.constFn(page.MaterialPageRoute$(core.Null)))(),
    BuildContextToWidget: () => (T.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    RouteSettingsN: () => (T.RouteSettingsN = dart.constFn(dart.nullable(navigator$.RouteSettings)))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    MapOfString$ListOfString: () => (T.MapOfString$ListOfString = dart.constFn(core.Map$(core.String, T.ListOfString())))(),
    RouteSettingsNAndMapOfString$ListOfStringToMaterialPageRouteOfNull: () => (T.RouteSettingsNAndMapOfString$ListOfStringToMaterialPageRouteOfNull = dart.constFn(dart.fnType(T.MaterialPageRouteOfNull(), [T.RouteSettingsN(), T.MapOfString$ListOfString()])))(),
    IdentityMapOfString$ListOfString: () => (T.IdentityMapOfString$ListOfString = dart.constFn(_js_helper.IdentityMap$(core.String, T.ListOfString())))(),
    AnimationOfdouble: () => (T.AnimationOfdouble = dart.constFn(animation.Animation$(core.double)))(),
    BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget: () => (T.BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T.AnimationOfdouble(), T.AnimationOfdouble()])))(),
    BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget: () => (T.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T.AnimationOfdouble(), T.AnimationOfdouble(), framework.Widget])))(),
    RouteSettingsNAndMapOfString$ListOfStringToPageRoute: () => (T.RouteSettingsNAndMapOfString$ListOfStringToPageRoute = dart.constFn(dart.fnType(pages.PageRoute, [T.RouteSettingsN(), T.MapOfString$ListOfString()])))(),
    TweenOfOffset: () => (T.TweenOfOffset = dart.constFn(tween.Tween$(ui.Offset)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 250000
      });
    },
    get C2() {
      return C[2] = dart.constList([], widget_inspector._Location);
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[2] || CT.C2,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 118,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/fluro-2.0.3/lib/src/fluro_router.dart"
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[2] || CT.C2,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 171,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/fluro-2.0.3/lib/src/fluro_router.dart"
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[2] || CT.C2,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 182,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/fluro-2.0.3/lib/src/fluro_router.dart"
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[2] || CT.C2,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 193,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/fluro-2.0.3/lib/src/fluro_router.dart"
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[2] || CT.C2,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 211,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/fluro-2.0.3/lib/src/fluro_router.dart"
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 31,
        [_Location_line]: 240,
        [_Location_file]: null
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 51,
        [_Location_line]: 240,
        [_Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.constList([C[9] || CT.C9, C[10] || CT.C10], widget_inspector._Location);
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[8] || CT.C8,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 240,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/fluro-2.0.3/lib/src/fluro_router.dart"
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 1
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 1,
        [OffsetBase__dx]: 0
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: -1
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 11,
        [_Location_line]: 263,
        [_Location_file]: null
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 267,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.constList([C[17] || CT.C17, C[18] || CT.C18], widget_inspector._Location);
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[16] || CT.C16,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 262,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/fluro-2.0.3/lib/src/fluro_router.dart"
      });
    }
  }, false);
  var C = Array(19).fill(void 0);
  var I = ["package:fluro/src/fluro_router.dart"];
  var notFoundHandler = dart.privateName(fluro_router, "FluroRouter.notFoundHandler");
  var _routeTree = dart.privateName(fluro_router, "_routeTree");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _notFoundRoute = dart.privateName(fluro_router, "_notFoundRoute");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var _standardTransitionsBuilder = dart.privateName(fluro_router, "_standardTransitionsBuilder");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  fluro_router.FluroRouter = class FluroRouter extends core.Object {
    get notFoundHandler() {
      return this[notFoundHandler];
    }
    set notFoundHandler(value) {
      this[notFoundHandler] = value;
    }
    define(routePath, opts) {
      let handler = opts && 'handler' in opts ? opts.handler : null;
      let transitionType = opts && 'transitionType' in opts ? opts.transitionType : null;
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : C[0] || CT.C0;
      let transitionBuilder = opts && 'transitionBuilder' in opts ? opts.transitionBuilder : null;
      this[_routeTree].addRoute(new common.AppRoute.new(routePath, handler, {transitionType: transitionType, transitionDuration: transitionDuration, transitionBuilder: transitionBuilder}));
    }
    match(path) {
      return this[_routeTree].matchRoute(path);
    }
    pop(T, context, result = null) {
      return navigator$.Navigator.of(context).pop(T, result);
    }
    navigateTo(context, path, opts) {
      let replace = opts && 'replace' in opts ? opts.replace : false;
      let clearStack = opts && 'clearStack' in opts ? opts.clearStack : false;
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
      let rootNavigator = opts && 'rootNavigator' in opts ? opts.rootNavigator : false;
      let transition = opts && 'transition' in opts ? opts.transition : null;
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
      let transitionBuilder = opts && 'transitionBuilder' in opts ? opts.transitionBuilder : null;
      let routeSettings = opts && 'routeSettings' in opts ? opts.routeSettings : null;
      let routeMatch = this.matchRoute(context, path, {transitionType: transition, transitionsBuilder: transitionBuilder, transitionDuration: transitionDuration, maintainState: maintainState, routeSettings: routeSettings});
      let route = routeMatch.route;
      let completer = async.Completer.new();
      let future = completer.future;
      if (routeMatch.matchType === common.RouteMatchType.nonVisual) {
        completer.complete("Non visual route type.");
      } else {
        if (route == null && this.notFoundHandler != null) {
          route = this[_notFoundRoute](context, path, {maintainState: maintainState});
        }
        if (route != null) {
          let navigator = navigator$.Navigator.of(context, {rootNavigator: rootNavigator});
          if (clearStack) {
            future = navigator.pushAndRemoveUntil(T.ObjectN(), route, dart.fn(check => false, T.RouteTobool()));
          } else {
            future = replace ? navigator.pushReplacement(T.ObjectN(), T.ObjectN(), route) : navigator.push(T.ObjectN(), route);
          }
          completer.complete();
        } else {
          let error = "No registered route was found to handle '" + path + "'.";
          core.print(error);
          completer.completeError(new common.RouteNotFoundException.new(error, path));
        }
      }
      return future;
    }
    [_notFoundRoute](context, path, opts) {
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : null;
      let creator = dart.fn((routeSettings, parameters) => {
        let t0;
        return new (T.MaterialPageRouteOfNull()).new({settings: routeSettings, maintainState: (t0 = maintainState, t0 == null ? true : t0), builder: dart.fn(context => {
            let t3, t2, t1, t0, t0$;
            t0$ = (t0 = this.notFoundHandler, t0 == null ? null : (t1 = t0, t2 = context, t3 = parameters, t1.handlerFunc(t2, t3)));
            return t0$ == null ? new basic.SizedBox.shrink({$creationLocationd_0dea112b090073317d4: C[1] || CT.C1}) : t0$;
          }, T.BuildContextToWidget())});
      }, T.RouteSettingsNAndMapOfString$ListOfStringToMaterialPageRouteOfNull());
      return creator(new navigator$.RouteSettings.new({name: path}), new (T.IdentityMapOfString$ListOfString()).new());
    }
    matchRoute(buildContext, path, opts) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t2, t1, t0$4;
      let routeSettings = opts && 'routeSettings' in opts ? opts.routeSettings : null;
      let transitionType = opts && 'transitionType' in opts ? opts.transitionType : null;
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
      let transitionsBuilder = opts && 'transitionsBuilder' in opts ? opts.transitionsBuilder : null;
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
      let settingsToUse = (t0 = routeSettings, t0 == null ? new navigator$.RouteSettings.new({name: path}) : t0);
      if (settingsToUse.name == null) {
        settingsToUse = settingsToUse.copyWith({name: path});
      }
      let match = this[_routeTree].matchRoute(dart.nullCheck(path));
      let route = (t0$ = match, t0$ == null ? null : t0$.route);
      if (transitionDuration == null && (t0$0 = route, t0$0 == null ? null : t0$0.transitionDuration) != null) {
        transitionDuration = (t0$1 = route, t0$1 == null ? null : t0$1.transitionDuration);
      }
      let handler = common.Handler.as(route != null ? route.handler : this.notFoundHandler);
      let transition = transitionType;
      if (transitionType == null) {
        transition = route != null ? route.transitionType : common.TransitionType.native;
      }
      if (route == null && this.notFoundHandler == null) {
        return new common.RouteMatch.new({matchType: common.RouteMatchType.noMatch, errorMessage: "No matching route was found"});
      }
      let parameters = (t0$3 = (t0$2 = match, t0$2 == null ? null : t0$2.parameters), t0$3 == null ? new (T.IdentityMapOfString$ListOfString()).new() : t0$3);
      if (handler.type === common.HandlerType.function) {
        t0$4 = handler;
        t1 = buildContext;
        t2 = parameters;
        t0$4.handlerFunc(t1, t2);
        return new common.RouteMatch.new({matchType: common.RouteMatchType.nonVisual});
      }
      let creator = dart.fn((routeSettings, parameters) => {
        let t1, t0, t1$, t0$, t0$0, t1$0, t0$1, t0$2;
        let isNativeTransition = transition === common.TransitionType.native || transition === common.TransitionType.nativeModal;
        if (isNativeTransition) {
          return new page.MaterialPageRoute.new({settings: routeSettings, fullscreenDialog: transition === common.TransitionType.nativeModal, maintainState: maintainState, builder: dart.fn(context => {
              let t2, t1, t0, t0$;
              t0$ = (t0 = handler, t1 = context, t2 = parameters, t0.handlerFunc(t1, t2));
              return t0$ == null ? new basic.SizedBox.shrink({$creationLocationd_0dea112b090073317d4: C[3] || CT.C3}) : t0$;
            }, T.BuildContextToWidget())});
        } else if (transition === common.TransitionType.material || transition === common.TransitionType.materialFullScreenDialog) {
          return new page.MaterialPageRoute.new({settings: routeSettings, fullscreenDialog: transition === common.TransitionType.materialFullScreenDialog, maintainState: maintainState, builder: dart.fn(context => {
              let t2, t1, t0, t0$;
              t0$ = (t0 = handler, t1 = context, t2 = parameters, t0.handlerFunc(t1, t2));
              return t0$ == null ? new basic.SizedBox.shrink({$creationLocationd_0dea112b090073317d4: C[4] || CT.C4}) : t0$;
            }, T.BuildContextToWidget())});
        } else if (transition === common.TransitionType.cupertino || transition === common.TransitionType.cupertinoFullScreenDialog) {
          return new route$.CupertinoPageRoute.new({settings: routeSettings, fullscreenDialog: transition === common.TransitionType.cupertinoFullScreenDialog, maintainState: maintainState, builder: dart.fn(context => {
              let t2, t1, t0, t0$;
              t0$ = (t0 = handler, t1 = context, t2 = parameters, t0.handlerFunc(t1, t2));
              return t0$ == null ? new basic.SizedBox.shrink({$creationLocationd_0dea112b090073317d4: C[5] || CT.C5}) : t0$;
            }, T.BuildContextToWidget())});
        } else {
          let routeTransitionsBuilder = null;
          if (transition === common.TransitionType.custom) {
            routeTransitionsBuilder = (t0 = transitionsBuilder, t0 == null ? (t1 = route, t1 == null ? null : t1.transitionBuilder) : t0);
          } else {
            routeTransitionsBuilder = this[_standardTransitionsBuilder](transition);
          }
          return new pages.PageRouteBuilder.new({settings: routeSettings, maintainState: maintainState, pageBuilder: dart.fn((context, animation, secondaryAnimation) => {
              let t2, t1, t0, t0$;
              t0$ = (t0 = handler, t1 = context, t2 = parameters, t0.handlerFunc(t1, t2));
              return t0$ == null ? new basic.SizedBox.shrink({$creationLocationd_0dea112b090073317d4: C[6] || CT.C6}) : t0$;
            }, T.BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget()), transitionDuration: transition === common.TransitionType.none ? core.Duration.zero : (t0$0 = (t0$ = transitionDuration, t0$ == null ? (t1$ = route, t1$ == null ? null : t1$.transitionDuration) : t0$), t0$0 == null ? fluro_router.FluroRouter.defaultTransitionDuration : t0$0), reverseTransitionDuration: transition === common.TransitionType.none ? core.Duration.zero : (t0$2 = (t0$1 = transitionDuration, t0$1 == null ? (t1$0 = route, t1$0 == null ? null : t1$0.transitionDuration) : t0$1), t0$2 == null ? fluro_router.FluroRouter.defaultTransitionDuration : t0$2), transitionsBuilder: transition === common.TransitionType.none ? dart.fn((_, __, ___, child) => child, T.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget()) : dart.nullCheck(routeTransitionsBuilder)});
        }
      }, T.RouteSettingsNAndMapOfString$ListOfStringToPageRoute());
      return new common.RouteMatch.new({matchType: common.RouteMatchType.visual, route: creator(settingsToUse, parameters)});
    }
    [_standardTransitionsBuilder](transitionType) {
      return dart.fn((context, animation, secondaryAnimation, child) => {
        if (transitionType === common.TransitionType.fadeIn) {
          return new transitions.FadeTransition.new({opacity: animation, child: child, $creationLocationd_0dea112b090073317d4: C[7] || CT.C7});
        } else {
          let topLeft = C[11] || CT.C11;
          let topRight = C[12] || CT.C12;
          let bottomLeft = C[13] || CT.C13;
          let startOffset = bottomLeft;
          let endOffset = topLeft;
          if (transitionType === common.TransitionType.inFromLeft) {
            startOffset = C[14] || CT.C14;
            endOffset = topLeft;
          } else if (transitionType === common.TransitionType.inFromRight) {
            startOffset = topRight;
            endOffset = topLeft;
          } else if (transitionType === common.TransitionType.inFromBottom) {
            startOffset = bottomLeft;
            endOffset = topLeft;
          } else if (transitionType === common.TransitionType.inFromTop) {
            startOffset = new ui.Offset.new(0.0, -1.0);
            endOffset = topLeft;
          }
          return new transitions.SlideTransition.new({position: new (T.TweenOfOffset()).new({begin: startOffset, end: endOffset}).animate(animation), child: child, $creationLocationd_0dea112b090073317d4: C[15] || CT.C15});
        }
      }, T.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget());
    }
    generator(routeSettings) {
      let match = this.matchRoute(null, routeSettings.name, {routeSettings: routeSettings});
      return match.route;
    }
    printTree() {
      this[_routeTree].printTree();
    }
  };
  (fluro_router.FluroRouter.new = function() {
    this[_routeTree] = new tree.RouteTree.new();
    this[notFoundHandler] = null;
    ;
  }).prototype = fluro_router.FluroRouter.prototype;
  dart.addTypeTests(fluro_router.FluroRouter);
  dart.addTypeCaches(fluro_router.FluroRouter);
  dart.setMethodSignature(fluro_router.FluroRouter, () => ({
    __proto__: dart.getMethods(fluro_router.FluroRouter.__proto__),
    define: dart.fnType(dart.void, [core.String], {transitionBuilder: dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double), framework.Widget])), transitionDuration: core.Duration, transitionType: dart.nullable(common.TransitionType)}, {handler: dart.nullable(common.Handler)}),
    match: dart.fnType(dart.nullable(tree.AppRouteMatch), [core.String]),
    pop: dart.gFnType(T => [dart.void, [framework.BuildContext], [dart.nullable(T)]], T => [dart.nullable(core.Object)]),
    navigateTo: dart.fnType(async.Future, [framework.BuildContext, core.String], {clearStack: core.bool, maintainState: core.bool, replace: core.bool, rootNavigator: core.bool, routeSettings: dart.nullable(navigator$.RouteSettings), transition: dart.nullable(common.TransitionType), transitionBuilder: dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double), framework.Widget])), transitionDuration: dart.nullable(core.Duration)}, {}),
    [_notFoundRoute]: dart.fnType(navigator$.Route$(core.Null), [framework.BuildContext, core.String], {maintainState: dart.nullable(core.bool)}, {}),
    matchRoute: dart.fnType(common.RouteMatch, [dart.nullable(framework.BuildContext), dart.nullable(core.String)], {maintainState: core.bool, routeSettings: dart.nullable(navigator$.RouteSettings), transitionDuration: dart.nullable(core.Duration), transitionType: dart.nullable(common.TransitionType), transitionsBuilder: dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double), framework.Widget]))}, {}),
    [_standardTransitionsBuilder]: dart.fnType(dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double), framework.Widget]), [dart.nullable(common.TransitionType)]),
    generator: dart.fnType(dart.nullable(navigator$.Route), [navigator$.RouteSettings]),
    printTree: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(fluro_router.FluroRouter, I[0]);
  dart.setFieldSignature(fluro_router.FluroRouter, () => ({
    __proto__: dart.getFields(fluro_router.FluroRouter.__proto__),
    [_routeTree]: dart.finalFieldType(tree.RouteTree),
    notFoundHandler: dart.fieldType(dart.nullable(common.Handler))
  }));
  dart.defineLazy(fluro_router.FluroRouter, {
    /*fluro_router.FluroRouter.appRouter*/get appRouter() {
      return new fluro_router.FluroRouter.new();
    },
    /*fluro_router.FluroRouter.defaultTransitionDuration*/get defaultTransitionDuration() {
      return C[0] || CT.C0;
    }
  }, false);
  dart.trackLibraries("packages/fluro/src/fluro_router.dart", {
    "package:fluro/src/fluro_router.dart": fluro_router,
    "package:fluro/fluro.dart": fluro
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["fluro_router.dart"],"names":[],"mappings":"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","file":"../../../../../../../packages/fluro/src/fluro_router.dart.lib.js"}');
  // Exports:
  return {
    src__fluro_router: fluro_router,
    fluro: fluro
  };
}));

//# sourceMappingURL=fluro_router.dart.lib.js.map
